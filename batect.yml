project_name: meta-blogger

containers:
  test-database:
    image: postgres:14.2
    volumes:
      - local: Backend
        container: /code
        options: cached
    working_directory: /code
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    ports:
      - 5433:5432
    command: npm run migrate-db ci

  frontend:
    image: node:14
    volumes:
      - local: Frontend
        container: /code
        options: cached
    working_directory: /code
    ports:
      - 1234:1234

  backend-with-database:
    image: node:14
    volumes:
      - local: Backend
        container: /code
        options: cached
    working_directory: /code
    environment:
      dbUsername: postgres
      dbPassword: password
      dbHost: test-database
      dbDatabase: postgres
    ports:
      - 4000:4000
    dependencies:
      - test-database
    command: npm run start

  backend:
    image: node:14
    volumes:
      - local: Backend
        container: /code
        options: cached
    working_directory: /code
    ports:
      - 4000:4000
    command: npm run start

  docker-push-env:
    build_directory: .
    dockerfile: ./deploy/Dockerfile
    volumes:
      - local: .
        container: /code
        options: cached
      - local: ./secret # ?
        container: /secret # ?
      - local: /var/run/docker.sock # ?
        container: /var/run/docker.sock # ?
    working_directory: /code
    environment:
      PROJECT_NAME: ${PROJECT_NAME} # ?

tasks:
  run-test-database:
    description: setup test database on postgres
    run:
      container: test-databases

  run-backend-tests:
    description: run tests
    prerequisites:
      - install-backend
    run:
      container: backend-with-database
      command: npm run test

  run-frontend-tests:
    description: run tests
    prerequisites:
      - install-frontend
    run:
      container: frontend
      command: npm run test

  install-backend:
    description: build the backend
    run:
      container: backend
      command: npm install

  install-frontend:
    description: build the frontend
    run:
      container: frontend
      command: npm install

    # -----------------------------------------------------------------------------------------

  run-backend:
    description: run backend
    run:
      container: backend-with-database
      command: npm run start

  run-frontend:
    description: run frontend
    dependencies:
      - backend
    prerequisites:
      - install-frontend
    run:
      container: frontend
      command: npm run dev

  run-backend-only:
    description: run the backend only
    prerequisites:
      - install-backend
    run:
      container: backend
      command: npm start

  run-frontend-only:
    description: run the frontend only
    prerequisites:
      - install-frontend
    run:
      container: frontend
      command: npm run dev

  push-image:
    description: Build and push the image
    group: Deploy
    run:
      container: docker-push-env
      command: ./deploy/buildAndPushImage.sh
      environment:
        IMAGE_NAME: web

  deploy: # change this!!!
    description: Deploy the new version to the cluster
    group: Deploy
    run:
      container: google-cloud
      command: ./deploy/deploy.sh
      environment:
        IMAGE_NAME: web
        CLUSTER_NAME: ${CLUSTER_NAME}
        LB_STATIC_IP: ${LB_STATIC_IP}
        PORT: "80"
